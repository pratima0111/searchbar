{"version":3,"sources":["Components/Autocomplete.js","index.js"],"names":["Autocomplete","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","item","Object","keys","some","key","toString","toLowerCase","includes","setState","activeSuggestion","showSuggestions","showuser","displayuser","state","length","it","data","find","name","className","items","join","address","pincode","onClick","suggestedname","innerText","onKeyDown","keyCode","suggestionsListComponent","this","map","suggestion","index","onKeyPress","handleKeypress","id","type","placeholder","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aef154e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component, Fragment } from \"react\";\r\nimport './Autocomplete.css';\r\nimport data from './data.json'\r\n\r\n\r\nclass Autocomplete extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\",\r\n      showuser: ''\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n\r\n    const filteredSuggestions = suggestions.filter(item => {\r\n        return Object.keys(item).some(key =>    \r\n          item[key].toString().toLowerCase().includes(userInput.toLowerCase())\r\n        );\r\n      });\r\n  \r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n      showuser: ''\r\n    });\r\n  };\r\n\r\n    displayuser = () => {\r\n        // console.log('Display was called')\r\n\r\n            //if no match then return nothing\r\n            if(this.state.showuser===null || this.state.showuser.length===0 || this.state.userInput === null) return null\r\n            \r\n\r\n            //when valid showuser is clicked\r\n            else{\r\n\r\n                const it = data.find((item)=> item.name===this.state.showuser);\r\n                    // console.log(it);\r\n                return(\r\n                            <div className=\"content user\">\r\n                                <h4>{it.name}</h4>\r\n                                <h6>{ it.items.join(\", \")} </h6>\r\n                                <h7> {it.address}, {it.pincode}</h7>            \r\n                            </div>\r\n                    )\r\n            }       \r\n        }           \r\n\r\n  onClick = (e, suggestedname) => {\r\n        // e.preventdefault();\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n            userInput: e.currentTarget.innerText,\r\n            showuser: suggestedname,\r\n          })\r\n\r\n        //   console.log(this.state.showuser);\r\n\r\n    };\r\n\r\n\r\n    //handle arrow key up and down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n  \r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion]\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n};\r\n\r\n\r\n   //not working \r\n//     handleKeypress = e => {\r\n//     //it triggers by pressing the enter key\r\n//     if (e.key === 'Enter') {\r\n//       console.log(\"pressed enter\");\r\n//     //   this.onClick();\r\n//     };\r\n\r\n// };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput,\r\n        showuser\r\n      }\r\n    } = this;\r\n\r\n    //when enter key pressed on list item\r\n   \r\n     \r\n  \r\n    let suggestionsListComponent;\r\n    \r\n    // only if userinput i not null and also the lenght of filetered solution is not null then display the list\r\n    if (showSuggestions && userInput) {\r\n        if (filteredSuggestions.length) {\r\n          suggestionsListComponent= (\r\n\r\n              <div className=\"content\">\r\n                <ul className = \"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            let className;\r\n      \r\n                // Flag the active suggestion with a class\r\n                if (index === activeSuggestion) {\r\n                  className = \"suggestion-active\";\r\n                }\r\n                return (\r\n                    <div>\r\n                                                                                                                    {/* onKeyPress not working */}\r\n                        <li className={className} key={suggestion.id} onClick={(e) => {onClick(e, suggestion.name);}} onKeyPress={this.handleKeypress}>\r\n                        {suggestion.name}- {suggestion.address} - {suggestion.pincode} - {suggestion.items.join(\" \")}\r\n                    </li>\r\n                    </div>\r\n                    );\r\n                })}\r\n                </ul>\r\n                </div> \r\n          );\r\n        } else {\r\n            // when no suggestion are available\r\n            suggestionsListComponent = (\r\n                    <div className=\"no-suggestions\"  >\r\n                    <em>No suggestions available.</em>\r\n                    </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <Fragment>\r\n            <div className=\"content\">\r\n                <h1>Auto-suggestion SearchBar</h1>\r\n                <h2> Search for a set of user</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                    value={userInput}\r\n                    placeholder=\"search something...\"  \r\n                />\r\n                <div className = \"content\">\r\n                {suggestionsListComponent}\r\n\r\n                </div>\r\n\r\n                {/* below component will display the clicked user from suggested list, DOESN'T WORK ON ENTER KEY */}\r\n                {this.displayuser()}\r\n            </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Autocomplete;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Autocomplete from './Components/Autocomplete';\nimport data from './Components/data.json';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Autocomplete suggestions={data} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}